{
    "swagger": "2.0",
    "info": {
        "description": "Course project: simple support chat with roles, dialogs, and messaging.",
        "title": "Support Chat Server",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Dima Avtenev",
            "email": "hipper52@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth/sign-in": {
            "post": {
                "description": "Authenticates the operator and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in as an operator",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignInRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.SignInResponse200Body"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Creates a new operator with the given credentials and role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new operator",
                "parameters": [
                    {
                        "description": "Registration payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignUpRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.SignUpResponse200Body"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Operator already exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/client/register": {
            "post": {
                "description": "Registers a operator and puts them into the dialog queue. Broadcasts dialog creation to operators.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client"
                ],
                "summary": "Register a new operator and create a dialog",
                "parameters": [
                    {
                        "description": "Client registration payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterClientDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Client and Room ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/common/messages/{room_id}": {
            "get": {
                "description": "Returns all messages associated with a specific room ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "common"
                ],
                "summary": "Get messages by room ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Room ID",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Message"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid room_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns status of the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/health.HealthResponse"
                        }
                    }
                }
            }
        },
        "/operator/create": {
            "post": {
                "description": "Creates a new operator account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operator"
                ],
                "summary": "Create operator",
                "parameters": [
                    {
                        "description": "Operator Data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateOperatorDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/operator.Operator"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/operator/dialogs/active": {
            "get": {
                "description": "Returns all active dialogs assigned to the logged-in operator",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operator"
                ],
                "summary": "Get active dialogs of operator",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ActiveDialog"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/operator/dialogs/queued": {
            "get": {
                "description": "Returns all queued dialogs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operator"
                ],
                "summary": "Get queued dialogs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.QueuedDialog"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/operator/list": {
            "get": {
                "description": "Returns all operators in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operator"
                ],
                "summary": "List all operators",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/operator.Operator"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/operator/stats": {
            "get": {
                "description": "Returns statistics for each operator including dialog counts and average duration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operator"
                ],
                "summary": "Get operator statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.SignInRequestBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5,
                    "example": "test@test.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "example": "12345678"
                }
            }
        },
        "auth.SignInResponse200Body": {
            "type": "object",
            "properties": {
                "operator_id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/roles.Role"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.SignUpRequestBody": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5,
                    "example": "test@test.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "example": "12345678"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/roles.Role"
                        }
                    ],
                    "example": "operator"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2,
                    "example": "John Doe"
                }
            }
        },
        "auth.SignUpResponse200Body": {
            "type": "object",
            "properties": {
                "operator": {
                    "$ref": "#/definitions/operator.Operator"
                }
            }
        },
        "dto.CreateOperatorDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "pwd_hash": {
                    "type": "string",
                    "example": "$2a$10$pikzoSYzIs1GRRPi0vermeY1mPH4"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/roles.Role"
                        }
                    ],
                    "example": "operator"
                },
                "username": {
                    "type": "string",
                    "example": "John Doe"
                }
            }
        },
        "dto.RegisterClientDTO": {
            "type": "object",
            "required": [
                "name",
                "phone"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 2,
                    "example": "John Doe"
                },
                "phone": {
                    "type": "string",
                    "example": "+380931234567"
                }
            }
        },
        "health.HealthResponse": {
            "type": "object",
            "properties": {
                "env": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "message.TypeMessage": {
            "type": "string",
            "enum": [
                "text"
            ],
            "x-enum-varnames": [
                "Text"
            ]
        },
        "models.ActiveDialog": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "client_ip": {
                    "type": "string"
                },
                "client_name": {
                    "type": "string"
                },
                "client_phone": {
                    "type": "string"
                },
                "ended_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_message_at": {
                    "type": "string"
                },
                "operator_id": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "room_id": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "string"
                },
                "sent_at": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/message.TypeMessage"
                }
            }
        },
        "models.QueuedDialog": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "client_ip": {
                    "type": "string"
                },
                "client_name": {
                    "type": "string"
                },
                "client_phone": {
                    "type": "string"
                },
                "ended_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_message_at": {
                    "type": "string"
                },
                "operator_id": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                }
            }
        },
        "operator.Operator": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00+09:00"
                },
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "id": {
                    "type": "string",
                    "example": "0001M2PVBD5Q1DAMYJ0S2HADD6"
                },
                "pwd_hash": {
                    "type": "string",
                    "example": "$2a$10$pikzoSYzIs1GRRPi0vermeY1mPH4"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/roles.Role"
                        }
                    ],
                    "example": "operator"
                },
                "username": {
                    "type": "string",
                    "example": "John Doe"
                }
            }
        },
        "roles.Role": {
            "type": "string",
            "enum": [
                "admin",
                "operator",
                "client"
            ],
            "x-enum-varnames": [
                "Admin",
                "Operator",
                "Client"
            ]
        }
    },
    "securityDefinitions": {
        "X-User-Token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}
basePath: /
definitions:
  auth.SignInRequestBody:
    properties:
      email:
        example: test@test.com
        maxLength: 50
        minLength: 5
        type: string
      password:
        example: "12345678"
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  auth.SignInResponse200Body:
    properties:
      operator_id:
        type: string
      role:
        $ref: '#/definitions/roles.Role'
      token:
        type: string
    type: object
  auth.SignUpRequestBody:
    properties:
      email:
        example: test@test.com
        maxLength: 50
        minLength: 5
        type: string
      password:
        example: "12345678"
        maxLength: 20
        minLength: 8
        type: string
      role:
        allOf:
        - $ref: '#/definitions/roles.Role'
        example: operator
      username:
        example: John Doe
        maxLength: 50
        minLength: 2
        type: string
    required:
    - email
    - password
    - username
    type: object
  auth.SignUpResponse200Body:
    properties:
      operator:
        $ref: '#/definitions/operator.Operator'
    type: object
  dto.CreateOperatorDTO:
    properties:
      email:
        example: test@test.com
        type: string
      pwd_hash:
        example: $2a$10$pikzoSYzIs1GRRPi0vermeY1mPH4
        type: string
      role:
        allOf:
        - $ref: '#/definitions/roles.Role'
        example: operator
      username:
        example: John Doe
        type: string
    type: object
  dto.RegisterClientDTO:
    properties:
      name:
        example: John Doe
        minLength: 2
        type: string
      phone:
        example: "+380931234567"
        type: string
    required:
    - name
    - phone
    type: object
  health.HealthResponse:
    properties:
      env:
        type: string
      status:
        type: string
    type: object
  message.TypeMessage:
    enum:
    - text
    type: string
    x-enum-varnames:
    - Text
  models.ActiveDialog:
    properties:
      client_id:
        type: string
      client_ip:
        type: string
      client_name:
        type: string
      client_phone:
        type: string
      ended_at:
        type: string
      id:
        type: string
      last_message_at:
        type: string
      operator_id:
        type: string
      started_at:
        type: string
    type: object
  models.Message:
    properties:
      content:
        type: string
      id:
        type: string
      room_id:
        type: string
      sender_id:
        type: string
      sent_at:
        type: string
      type:
        $ref: '#/definitions/message.TypeMessage'
    type: object
  models.QueuedDialog:
    properties:
      client_id:
        type: string
      client_ip:
        type: string
      client_name:
        type: string
      client_phone:
        type: string
      ended_at:
        type: string
      id:
        type: string
      last_message_at:
        type: string
      operator_id:
        type: string
      started_at:
        type: string
    type: object
  operator.Operator:
    properties:
      created_at:
        example: "2020-01-01T00:00:00+09:00"
        type: string
      email:
        example: test@test.com
        type: string
      id:
        example: 0001M2PVBD5Q1DAMYJ0S2HADD6
        type: string
      pwd_hash:
        example: $2a$10$pikzoSYzIs1GRRPi0vermeY1mPH4
        type: string
      role:
        allOf:
        - $ref: '#/definitions/roles.Role'
        example: operator
      username:
        example: John Doe
        type: string
    type: object
  roles.Role:
    enum:
    - admin
    - operator
    - client
    type: string
    x-enum-varnames:
    - Admin
    - Operator
    - Client
host: localhost:8080
info:
  contact:
    email: hipper52@gmail.com
    name: Dima Avtenev
  description: 'Course project: simple support chat with roles, dialogs, and messaging.'
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Support Chat Server
  version: "1.0"
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Authenticates the operator and returns a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.SignInRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SignInResponse200Body'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Sign in as an operator
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Creates a new operator with the given credentials and role
      parameters:
      - description: Registration payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.SignUpRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SignUpResponse200Body'
        "400":
          description: Bad request
          schema:
            type: string
        "409":
          description: Operator already exists
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Register a new operator
      tags:
      - auth
  /client/register:
    post:
      consumes:
      - application/json
      description: Registers a operator and puts them into the dialog queue. Broadcasts
        dialog creation to operators.
      parameters:
      - description: Client registration payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterClientDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Client and Room ID
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Register a new operator and create a dialog
      tags:
      - client
  /common/messages/{room_id}:
    get:
      consumes:
      - application/json
      description: Returns all messages associated with a specific room ID
      parameters:
      - description: Room ID
        in: path
        name: room_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Message'
            type: array
        "400":
          description: Invalid room_id
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get messages by room ID
      tags:
      - common
  /health:
    get:
      consumes:
      - application/json
      description: Returns status of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/health.HealthResponse'
      summary: Health check
      tags:
      - health
  /operator/create:
    post:
      consumes:
      - application/json
      description: Creates a new operator account
      parameters:
      - description: Operator Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateOperatorDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/operator.Operator'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create operator
      tags:
      - operator
  /operator/dialogs/active:
    get:
      description: Returns all active dialogs assigned to the logged-in operator
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ActiveDialog'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get active dialogs of operator
      tags:
      - operator
  /operator/dialogs/queued:
    get:
      description: Returns all queued dialogs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.QueuedDialog'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get queued dialogs
      tags:
      - operator
  /operator/list:
    get:
      description: Returns all operators in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/operator.Operator'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List all operators
      tags:
      - operator
  /operator/stats:
    get:
      description: Returns statistics for each operator including dialog counts and
        average duration
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get operator statistics
      tags:
      - operator
securityDefinitions:
  X-User-Token:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: deploy
    container_name: support-chat-backend
    ports:
      - "8080:8080"
    restart: unless-stopped
    env_file:
      - ./backend/.env
    depends_on:
      - mongo
      - rabbitmq
    healthcheck:
      test: [ "CMD", "/server", "-ping" ]
      interval: 30s
      timeout: 3s
      start_period: 5s

  consumer:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: consumer
    container_name: support-chat-consumer
    env_file:
      - ./backend/.env
    depends_on:
      - mongo
      - rabbitmq

  admin-frontend:
    build:
      context: ./admin-frontend
      dockerfile: Dockerfile
    container_name: support-chat-admin-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

  client-frontend:
    build:
      context: ./client-frontend
      dockerfile: Dockerfile
    container_name: support-chat-client-frontend
    ports:
      - "3001:80"
    depends_on:
      - backend

  mongo:
    image: mongo:7.0
    container_name: support-chat-mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: support
    volumes:
      - mongo-data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  rabbitmq:
    image: rabbitmq:3-management
    container_name: support-chat-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

volumes:
  mongo-data:
